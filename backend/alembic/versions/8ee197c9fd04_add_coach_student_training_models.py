"""Add coach student training models

Revision ID: 8ee197c9fd04
Revises: 
Create Date: 2025-09-08 10:41:25.410341

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8ee197c9fd04'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coach_students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_coach_students_coach_id'), 'coach_students', ['coach_id'], unique=False)
    op.create_index(op.f('ix_coach_students_id'), 'coach_students', ['id'], unique=False)
    op.create_index(op.f('ix_coach_students_student_id'), 'coach_students', ['student_id'], unique=False)
    op.create_table('coaches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('specialization', sa.String(length=255), nullable=True),
    sa.Column('certification', sa.String(length=255), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_coaches_id'), 'coaches', ['id'], unique=False)
    op.create_index(op.f('ix_coaches_user_id'), 'coaches', ['user_id'], unique=True)
    op.create_table('progress_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('record_date', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('body_fat_percentage', sa.Float(), nullable=True),
    sa.Column('muscle_mass', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_progress_records_id'), 'progress_records', ['id'], unique=False)
    op.create_index(op.f('ix_progress_records_student_id'), 'progress_records', ['student_id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_type', sa.Enum('USER', 'COACH', 'STUDENT', 'ADMIN', name='roletype'), nullable=False, comment='Tipo de rol'),
    sa.Column('permission', sa.String(length=100), nullable=False, comment='Nombre del permiso'),
    sa.Column('resource', sa.String(length=100), nullable=False, comment='Recurso al que aplica el permiso'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Si el permiso está activo'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='Fecha de creación del permiso'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_permissions_id'), 'role_permissions', ['id'], unique=False)
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('fitness_level', sa.String(length=50), nullable=True),
    sa.Column('goals', sa.Text(), nullable=True),
    sa.Column('medical_notes', sa.Text(), nullable=True),
    sa.Column('preferred_activities', sa.String(length=500), nullable=True),
    sa.Column('current_weight', sa.Float(), nullable=True),
    sa.Column('target_weight', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_students_id'), 'students', ['id'], unique=False)
    op.create_index(op.f('ix_students_user_id'), 'students', ['user_id'], unique=True)
    op.create_table('training_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('goal_id', sa.Integer(), nullable=True),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('feedback_type', sa.String(length=50), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_feedback_activity_id'), 'training_feedback', ['activity_id'], unique=False)
    op.create_index(op.f('ix_training_feedback_coach_id'), 'training_feedback', ['coach_id'], unique=False)
    op.create_index(op.f('ix_training_feedback_goal_id'), 'training_feedback', ['goal_id'], unique=False)
    op.create_index(op.f('ix_training_feedback_id'), 'training_feedback', ['id'], unique=False)
    op.create_index(op.f('ix_training_feedback_student_id'), 'training_feedback', ['student_id'], unique=False)
    op.create_table('training_goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coach_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('goal_type', sa.Enum('DISTANCE', 'TIME', 'WEIGHT_LOSS', 'STRENGTH', 'ENDURANCE', 'TECHNIQUE', 'CUSTOM', name='goaltype'), nullable=False),
    sa.Column('target_value', sa.Float(), nullable=True),
    sa.Column('current_value', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('target_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='goalstatus'), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_goals_coach_id'), 'training_goals', ['coach_id'], unique=False)
    op.create_index(op.f('ix_training_goals_id'), 'training_goals', ['id'], unique=False)
    op.create_index(op.f('ix_training_goals_student_id'), 'training_goals', ['student_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=False, comment='User real name (May include spaces)'),
    sa.Column('username', sa.String(length=250), nullable=False, comment='User username (letters, numbers, and dots allowed)'),
    sa.Column('email', sa.String(length=250), nullable=False, comment='User email (max 250 characters)'),
    sa.Column('password', sa.String(length=250), nullable=False, comment='User password (hash)'),
    sa.Column('city', sa.String(length=250), nullable=True, comment='User city'),
    sa.Column('birthdate', sa.Date(), nullable=True, comment='User birthdate (date)'),
    sa.Column('preferred_language', sa.String(length=5), nullable=False, comment='User preferred language (en, pt, others)'),
    sa.Column('gender', sa.Integer(), nullable=False, comment='User gender (one digit)(1 - male, 2 - female, 3 - unspecified)'),
    sa.Column('units', sa.Integer(), nullable=False, comment='User units (one digit)(1 - metric, 2 - imperial)'),
    sa.Column('height', sa.Integer(), nullable=True, comment='User height in centimeters'),
    sa.Column('access_type', sa.Integer(), nullable=False, comment='User type (one digit)(1 - user, 2 - admin)'),
    sa.Column('photo_path', sa.String(length=250), nullable=True, comment='User photo path'),
    sa.Column('is_active', sa.Integer(), nullable=False, comment='Is user active (1 - active, 2 - not active)'),
    sa.Column('first_day_of_week', sa.Integer(), nullable=False, comment='User first day of week (0 - Sunday, 1 - Monday, etc.)'),
    sa.Column('currency', sa.Integer(), nullable=False, comment='User currency (one digit)(1 - euro, 2 - dollar, 3 - pound)'),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=False, comment='Whether MFA is enabled for this user'),
    sa.Column('mfa_secret', sa.String(length=512), nullable=True, comment='User MFA secret for TOTP generation (encrypted at rest)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('user_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='ID del usuario'),
    sa.Column('role_type', sa.Enum('USER', 'COACH', 'STUDENT', 'ADMIN', name='roletype'), nullable=False, comment='Tipo de rol del usuario'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Si el rol está activo'),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='Fecha de asignación del rol'),
    sa.Column('assigned_by', sa.Integer(), nullable=True, comment='ID del usuario que asignó el rol'),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True, comment='Fecha de expiración del rol (opcional)'),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_roles_id'), 'user_roles', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_roles_id'), table_name='user_roles')
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_training_goals_student_id'), table_name='training_goals')
    op.drop_index(op.f('ix_training_goals_id'), table_name='training_goals')
    op.drop_index(op.f('ix_training_goals_coach_id'), table_name='training_goals')
    op.drop_table('training_goals')
    op.drop_index(op.f('ix_training_feedback_student_id'), table_name='training_feedback')
    op.drop_index(op.f('ix_training_feedback_id'), table_name='training_feedback')
    op.drop_index(op.f('ix_training_feedback_goal_id'), table_name='training_feedback')
    op.drop_index(op.f('ix_training_feedback_coach_id'), table_name='training_feedback')
    op.drop_index(op.f('ix_training_feedback_activity_id'), table_name='training_feedback')
    op.drop_table('training_feedback')
    op.drop_index(op.f('ix_students_user_id'), table_name='students')
    op.drop_index(op.f('ix_students_id'), table_name='students')
    op.drop_table('students')
    op.drop_index(op.f('ix_role_permissions_id'), table_name='role_permissions')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_progress_records_student_id'), table_name='progress_records')
    op.drop_index(op.f('ix_progress_records_id'), table_name='progress_records')
    op.drop_table('progress_records')
    op.drop_index(op.f('ix_coaches_user_id'), table_name='coaches')
    op.drop_index(op.f('ix_coaches_id'), table_name='coaches')
    op.drop_table('coaches')
    op.drop_index(op.f('ix_coach_students_student_id'), table_name='coach_students')
    op.drop_index(op.f('ix_coach_students_id'), table_name='coach_students')
    op.drop_index(op.f('ix_coach_students_coach_id'), table_name='coach_students')
    op.drop_table('coach_students')
    # ### end Alembic commands ###
